<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.cris.crud.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.zc.cris.crud.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="hiredate" jdbcType="DATE" property="hiredate" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, salary, age, gender, email, hiredate, dept_id
  </sql>
  <select id="selectByExample" parameterType="com.zc.cris.crud.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zc.cris.crud.bean.EmployeeExample">
    delete from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zc.cris.crud.bean.Employee">
    insert into tb_employee (id, name, salary, 
      age, gender, email, hiredate, 
      dept_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{salary,jdbcType=DOUBLE}, 
      #{age,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{hiredate,jdbcType=DATE}, 
      #{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zc.cris.crud.bean.Employee">
    insert into tb_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=DATE},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zc.cris.crud.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=DATE},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_employee
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DOUBLE},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=DATE},
      dept_id = #{record.deptId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.cris.crud.bean.Employee">
    update tb_employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        hiredate = #{hiredate,jdbcType=DATE},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.cris.crud.bean.Employee">
    update tb_employee
    set name = #{name,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      hiredate = #{hiredate,jdbcType=DATE},
      dept_id = #{deptId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.zc.cris.crud.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="hiredate" jdbcType="DATE" property="hiredate" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, salary, age, gender, email, hiredate, dept_id
  </sql>
  
  <!-- 查询员工带部门信息的 -->
  <!-- List&lt;Employee&gt; selectByExampleWithDepartment(EmployeeExample example); -->
  <resultMap id="ResultMapWithDepartmentByExample" type="com.zc.cris.crud.bean.Employee">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="hiredate" jdbcType="DATE" property="hiredate" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <!-- 使用 association 来封装联合查询出来的数据 -->
    <association javaType="com.zc.cris.crud.bean.Department" property="department">
    	<id column="dId" property="id" />
    	<result column="dName" property="name" />
    </association>
    <!-- &lt;result column="dId" property="department.id"/&gt;
    &lt;result column="dName" property="department.name"/&gt; -->
  </resultMap>
  <sql id="withDept_Column_List">
  	e.id, e.name, e.salary, e.age, e.gender, e.email, e.hiredate, e.dept_id, d.id dId, d.name dName
  </sql>
  <select id="selectByExampleWithDepartment" resultMap="ResultMapWithDepartmentByExample">
     select
    <if test="distinct">
      distinct
    </if>
    <include refid="withDept_Column_List" />
    <!-- 联合查询 -->
    from tb_employee e left join tb_department d on e.dept_id = d.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
    <!-- Employee selectByPrimaryKeyWithDepartment(Integer id); -->
   <resultMap id="ResultMapWithDepartmentByPrimaryKey" type="com.zc.cris.crud.bean.Employee">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="hiredate" jdbcType="DATE" property="hiredate" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <!-- 不使用 association 来封装联合查询出来的数据，直接将级联属性封装结果集(不推荐) -->
   	<result column="dId" property="department.id" />
    <result column="dName" property="department.name" />
  </resultMap>
     <select id="selectByPrimaryKeyWithDepartment" resultMap="ResultMapWithDepartmentByPrimaryKey">
	      select
	    <if test="distinct">
	      distinct
	    </if>
	    <include refid="withDept_Column_List" />
	    <!-- 联合查询 -->
	    from tb_employee e left join tb_department d on e.dept_id = d.id
	    <if test="_parameter != null">
	      <include refid="Example_Where_Clause" />
	    </if>
	    <if test="orderByClause != null">
	      order by ${orderByClause}
	    </if>
     </select>
    
  <!-- 查询员工不带部门信息的 -->
  <select id="selectByExample" parameterType="com.zc.cris.crud.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zc.cris.crud.bean.EmployeeExample">
    delete from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zc.cris.crud.bean.Employee">
    insert into tb_employee (id, name, salary, 
      age, gender, email, hiredate, 
      dept_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{salary,jdbcType=DOUBLE}, 
      #{age,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{hiredate,jdbcType=DATE}, 
      #{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zc.cris.crud.bean.Employee">
    insert into tb_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=DATE},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zc.cris.crud.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=DATE},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_employee
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DOUBLE},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=DATE},
      dept_id = #{record.deptId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.cris.crud.bean.Employee">
    update tb_employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        hiredate = #{hiredate,jdbcType=DATE},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.cris.crud.bean.Employee">
    update tb_employee
    set name = #{name,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      hiredate = #{hiredate,jdbcType=DATE},
      dept_id = #{deptId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>